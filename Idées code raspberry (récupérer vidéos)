from picamera2 import Picamera2, Preview
import cv2
from time import sleep

cam1 = Picamera2(0)
cam2 = Picamera2(1)

# 1ère possibilité

cam1.start_preview(Preview.QTGL)
cam2.start_preview(Preview.QTGL)

cam1.start()
cam2.start()

sleep(10)

cam1.capture_file("cam1.jpg")
cam2.capture_file("cam2.jpg")

cam1.stop()
cam2.stop()

cam1.stop_preview()
cam2.stop_preview()W


# 2eme possibilité

cam1.configure(cam1.create_preview_configuration())
cam2.configure(cam2.create_preview_configuration())

cam1.start()
cam2.start()

# Capture une image des deux caméras
image1 = cam1.capture_array()
image2 = cam2.capture_array()

# Affichage des images
cv2.imshow("Camera 1", image1)
cv2.imshow("Camera 2", image2)

cv2.waitKey(0)
cv2.destroyAllWindows()


# Stream vidéo en temps réel avec OpenCV

cam1.configure(cam1.create_preview_configuration())
cam2.configure(cam2.create_preview_configuration())

cam1.start()
cam2.start()

while True:
    frame1 = cam1.capture_array()
    frame2 = cam2.capture_array()

    # Affichage côte à côte
    combined = cv2.hconcat([frame1, frame2])

    cv2.imshow("Dual Camera Feed", combined)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cv2.destroyAllWindows()